services:
  # PostgreSQL
  postgres-v2:
    image: 'postgres:15'
    container_name: ticket-postgres-v2
    environment:
      - POSTGRES_DB=ticket
      - POSTGRES_USER=ticket
      - POSTGRES_PASSWORD=ticketpass
    ports:
      - '5433:5432'
    volumes:
      - postgres_data_v2:/var/lib/postgresql/data
    networks:
      - unified-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ticket -d ticket"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis
  redis-v2:
    image: 'redis:7'
    container_name: ticket-redis-v2
    ports:
      - '6380:6379'
    volumes:
      - redis_data_v2:/data
    networks:
      - unified-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # pgAdmin
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: unified-pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@ddcn41.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - unified-network

  # 통합 Nginx
  nginx:
    image: nginx:alpine
    container_name: unified-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/nginx/unified-dev.conf:/etc/nginx/conf.d/default.conf:ro
      - ./infra/nginx/certs:/etc/nginx/certs:ro
    networks:
      - unified-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

networks:
  unified-network:
    driver: bridge

volumes:
  postgres_data_v2:
  redis_data_v2:
  pgadmin_data: