# ticketing-system/docker-compose.yml
version: '3.8'

services:
  # 공용 PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: ticketing-postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ticketing-network

  # 공용 Redis
  redis:
    image: redis:7-alpine
    container_name: ticketing-redis
    ports:
      - "6379:6379"
    networks:
      - ticketing-network

  # Queue Service
  queue-service:
    build:
      context: ./queue-service
      dockerfile: Dockerfile
    container_name: queue-service
    ports:
      - "8081:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/queue_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    depends_on:
      - postgres
      - redis
    networks:
      - ticketing-network

  # Booking Service (나머지_DB 사용)
  booking-service:
    build:
      context: ./booking-service
      dockerfile: Dockerfile
    container_name: booking-service
    ports:
      - "8082:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/booking_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: password
      QUEUE_SERVICE_URL: http://queue-service:8080
    depends_on:
      - postgres
    networks:
      - ticketing-network

  # Admin Service
  admin-service:
    build:
      context: ./admin-service
      dockerfile: Dockerfile
    container_name: admin-service
    ports:
      - "8083:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/admin_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: password
    depends_on:
      - postgres
    networks:
      - ticketing-network

volumes:
  postgres-data:

networks:
  ticketing-network:
    driver: bridge