# upstream: 서비스명
upstream api_service   { server api-service:8082; keepalive 32; }
upstream queue_service { server queue-service:8083; keepalive 32; }

map $http_upgrade $connection_upgrade { default upgrade; '' close; }

server {
  listen 80;
  server_name localhost;

  # --- /api/** ---
  location /api/ {
      # Preflight
      if ($request_method = OPTIONS) {
          add_header Access-Control-Allow-Origin $http_origin always;
          add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
          add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, Accept, Origin" always;
          add_header Access-Control-Allow-Credentials "true" always;
          add_header Access-Control-Max-Age "3600" always;
          return 204;
      }

      add_header Access-Control-Allow-Origin $http_origin always;
      add_header Access-Control-Allow-Credentials "true" always;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_read_timeout 60s;

      #  /api 제거하고 전달
      rewrite ^/api/(.*)$ /$1 break;
      proxy_pass http://api_service;
  }

  # --- /queue/** ---
  location ^~ /queue/ {
      if ($request_method = OPTIONS) {
          add_header Access-Control-Allow-Origin $http_origin always;
          add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
          add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, Accept, Origin" always;
          add_header Access-Control-Allow-Credentials "true" always;
          add_header Access-Control-Max-Age "3600" always;
          return 204;
      }

      add_header Access-Control-Allow-Origin $http_origin always;
      add_header Access-Control-Allow-Credentials "true" always;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_read_timeout 300s;

      #  /queue 제거하고 전달
      rewrite ^/queue/(.*)$ /$1 break;
      proxy_pass http://queue_service;
  }
}