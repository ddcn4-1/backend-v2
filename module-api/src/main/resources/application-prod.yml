# prod

spring:
  config:
    activate:
      on-profile: prod

  # 프로덕션 DB 설정
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: validate  # 프로덕션에서는 validate만
    properties:
      hibernate:
        show_sql: false
        format_sql: false

  cloud:
    aws:
      credentials:
        access-key: {AWS_S3_ACCESS_KEY}
        secret-key: {AWS_S3_SECRET_KEY}
      s3:
        bucket: ddcn41v1-image
      region:
        static: ap-northeast-2

  # 프로덕션 Redis 설정
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD}
      timeout: 5000ms
      lettuce:
        pool:
          max-active: 8
          max-wait: -1ms
          max-idle: 8
          min-idle: 0

# 프로덕션 로깅 설정
logging:
  level:
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.springframework.web: WARN
    org.springframework.jdbc: WARN
    org.ddcn41.ticketing_system: INFO
    org.ddcn41.ticketing_system.domain.seat.service: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/ticketing-system.log

# JWT 프로덕션 설정
jwt:
  secret: ${JWT_SECRET}  # 환경변수에서만 가져오기
  access-token-validity-ms: 3600000

# Swagger 프로덕션 설정 (비활성화)
app:
  swagger:
    quick-auth:
      enabled: false

springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false

# 프로덕션 좌석락 설정
seatlock:
  mode: redis
  ttl-seconds: 600  # 10분
  extend-seconds: 120